name: "🚀 Create Release"

on:
  workflow_run:
    workflows: ["🛠️ Flutter Build"]
    types:
      - completed
    branches:
      - master

jobs:
  release:
    name: "🚀 Create GitHub Release"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: "📱 Send Release Stage Notification"
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        format: markdown
        message: |
          🚀 *Stage 3/3: Release Started*
          📂 Repository: `${{ github.repository }}`
          🔗 [View Progress](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

    - name: "👅 Checkout Repository"
      uses: actions/checkout@v3
    
    - name: "👅 Download Version Info"
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: "🛠️ Flutter Build"
        workflow_conclusion: success
        name: build-success-marker
        path: ./
        
    - name: "📊 Get App Version"
      id: get_version
      run: |
        VERSION=$(cat version.txt)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    # Retrieve APK from build job
    - name: "👅 Download APK from Build Job"
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: "🛠️ Flutter Build"
        workflow_conclusion: success
        name: release-apk
        path: apk
        
    - name: "🏷️ Create GitHub Release"
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "apk/app-release.apk"
        prerelease: false
        draft: false
        tag: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: |
          ## 🚀 Release v${{ steps.get_version.outputs.version }}
          
          ### 📱 Downloads
          - [Download APK](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.version }}/app-release.apk)

    - name: "📱 Send Release Results Notification"
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        format: markdown
        message: |
          ${{ job.status == 'success' && '✅ *Release Created Successfully*' || '❌ *Release Failed*' }}
          📂 Repository: `${{ github.repository }}`
          📊 Version: `v${{ steps.get_version.outputs.version }}`
          ${{ job.status == 'success' && '🔗 [Download APK](https://github.com/' || '' }}${{ job.status == 'success' && github.repository || '' }}${{ job.status == 'success' && '/releases/download/v' || '' }}${{ job.status == 'success' && steps.get_version.outputs.version || '' }}${{ job.status == 'success' && '/app-release.apk)' || '' }}
          ${{ job.status == 'success' && '📝 [View Release](https://github.com/' || '' }}${{ job.status == 'success' && github.repository || '' }}${{ job.status == 'success' && '/releases/tag/v' || '' }}${{ job.status == 'success' && steps.get_version.outputs.version || '' }}${{ job.status == 'success' && ')' || '' }}
