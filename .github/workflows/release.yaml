name: Create Release

on:
  workflow_run:
    workflows: ["Build APK"]
    types:
      - completed
    branches:
      - master

jobs:
  release:
    name: Create Release
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Download version info
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: build.yml
        workflow_conclusion: success
        name: build-success-marker
        path: ./
        
    - name: Get version
      id: get_version
      run: |
        VERSION=$(cat version.txt)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Download APK from build
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: build.yml
        workflow_conclusion: success
        name: release-apk
        path: apk
        
    - name: 'Upload apk to GitHub'
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "apk/app-release.apk"
        prerelease: false
        tag: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: |
          Automatically generated release by GitHub Actions
          Application version: ${{ steps.get_version.outputs.version }}
          > Future improvement: Extract release data from README.md

    - name: Notify Release Result
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          STATUS="✅ *Successful Release*"
        else
          STATUS="❌ *Failed Release*"
        fi
        
        curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
        -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
        -d "text=$STATUS%0A📂 Repository: ${{ github.repository }}%0A📂 Versión: v${{ steps.get_version.outputs.version }}%0A🔗 [Ver detalles](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" \
        -d "parse_mode=Markdown"