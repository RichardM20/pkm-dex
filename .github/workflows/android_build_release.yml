name: Build y Release APK Android

on:
  push:
    branches: [ dev ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.0' # replace with fv
    - run: flutter pub get
    - run: flutter test

  build:
    name: Build APK
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.0' # replace with fv
    - run: flutter pub get
    - run: flutter build apk --release

    outputs:
      apk_path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Obtener versión de la aplicación
      id: get_version
      run: |
        VERSION=$(grep "version:" pubspec.yaml | awk '{print $2}')
        echo "::set-output name=app_version::$VERSION"
    - name: 'Upload apk to GitHub'
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ jobs.build.outputs.apk_path }}
        prerelease: false
        tag_name: v${{ steps.get_version.outputs.app_version }}
        name: Release v${{ steps.get_version.outputs.app_version }}
        body: |
          Automatically generated release by GitHub Actions.
                Application version: ${{ steps.get_version.outputs.app_version }}