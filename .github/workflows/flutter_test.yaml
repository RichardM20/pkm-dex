# =========================================================
# Flutter Tests Workflow
# =========================================================
# Runs tests on all branches and PRs to master
# Maintains high quality standards through automated testing
# =========================================================

name: "🧪 Flutter Tests"

on:
  push:
    branches: 
      - '**'  
  pull_request:
    branches:
      - master  

env:
  FLUTTER_VERSION: '3.29.0'
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'zulu'

jobs:
  notify_start:
    name: "📢 Workflow Initialization"
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.branch_info.outputs.branch_name }}
    
    steps:
      - name: "Extract Repository Information"
        id: branch_info
        run: |
          echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "commit_message=$(echo '${{ github.event.head_commit.message }}' | tr '\n' ' ' | head -c 50)" >> $GITHUB_OUTPUT
        
      - name: "📱 Send Initialization Notification"
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            📢 *New Commit Detected*
            📂 Repository: `${{ github.repository }}`
            🌿 Branch: `${{ steps.branch_info.outputs.branch_name }}`
            👤 Author: ${{ github.actor }}
            📝 Message: ${{ steps.branch_info.outputs.commit_message }}
            
            ▶️ *GitHub Actions Pipeline Started*
            🔄 Process Flow: Tests → Build → Release
            🔗 [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

  test:
    name: "🧪 Run Flutter Tests"
    needs: notify_start
    runs-on: ubuntu-latest
    
    steps:
    - name: "📱 Send Test Stage Notification"
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        format: markdown
        message: |
          🧪 *Stage 1/3: Tests Started*
          📂 Repository: `${{ github.repository }}`
          🔗 [View Progress](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

    - name: "📥 Checkout Repository"
      uses: actions/checkout@v3
      
    - name: "☕ Setup Java Environment"
      uses: actions/setup-java@v3
      with:
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: "📱 Setup Flutter SDK"
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: "📦 Install Dependencies"
      run: flutter pub get
      
    - name: "🏗️ Generate Code"
      run: flutter pub run build_runner build --delete-conflicting-outputs
      
    - name: "🧪 Run Tests"
      run: flutter test --verbose
    
    - name: "📱 Send Test Results Notification"
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        format: markdown
        message: |
          ${{ job.status == 'success' && '✅ *Tests Passed Successfully*' || '❌ *Tests Failed*' }}
          📂 Repository: `${{ github.repository }}`
          ⏱️ Duration: `${{ steps.datetime.outputs.duration }}`
          🔗 [View Results](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
    
    - name: "🔖 Create Success Marker"
      if: success() && github.ref == 'refs/heads/master'
      run: echo "${{ github.run_id }}" > test_success.txt
      
    - name: "📤 Upload Success Marker"
      if: success() && github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v4
      with:
        name: test-success-marker
        path: test_success.txt
        retention-days: 1