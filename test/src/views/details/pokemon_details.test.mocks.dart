// Mocks generated by Mockito 5.4.5 from annotations
// in poke_api/test/src/views/details/pokemon_details.test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:poke_api/src/controllers/detailCotroller/detail_pkm_controller.dart'
    as _i8;
import 'package:poke_api/src/controllers/detailCotroller/detail_pkm_controller_state.dart'
    as _i2;
import 'package:poke_api/src/models/pokemon_detail_model.dart' as _i6;
import 'package:poke_api/src/models/pokemon_model.dart' as _i5;
import 'package:poke_api/src/models/pokemon_move_details.dart' as _i7;
import 'package:poke_api/src/services/poke_api.dart' as _i3;
import 'package:poke_api/src/views/exports.dart' as _i9;
import 'package:state_notifier/state_notifier.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePkmDetailState_0 extends _i1.SmartFake
    implements _i2.PkmDetailState {
  _FakePkmDetailState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PokeApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokeApi extends _i1.Mock implements _i3.PokeApi {
  MockPokeApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.Pokemon?> getPokemon({required dynamic pokemonId}) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemon, [], {#pokemonId: pokemonId}),
            returnValue: _i4.Future<_i5.Pokemon?>.value(),
          )
          as _i4.Future<_i5.Pokemon?>);

  @override
  _i4.Future<_i6.PkmDetails?> getPokemonDetails({required dynamic pkmName}) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemonDetails, [], {#pkmName: pkmName}),
            returnValue: _i4.Future<_i6.PkmDetails?>.value(),
          )
          as _i4.Future<_i6.PkmDetails?>);

  @override
  _i4.Future<_i7.PkmMoveDetails?> getMoveDetails({required dynamic url}) =>
      (super.noSuchMethod(
            Invocation.method(#getMoveDetails, [], {#url: url}),
            returnValue: _i4.Future<_i7.PkmMoveDetails?>.value(),
          )
          as _i4.Future<_i7.PkmMoveDetails?>);
}

/// A class which mocks [DetailPkmController].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailPkmController extends _i1.Mock
    implements _i8.DetailPkmController {
  MockDetailPkmController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onError(_i9.ErrorListener? _onError) => super.noSuchMethod(
    Invocation.setter(#onError, _onError),
    returnValueForMissingStub: null,
  );

  @override
  bool get mounted =>
      (super.noSuchMethod(Invocation.getter(#mounted), returnValue: false)
          as bool);

  @override
  _i4.Stream<_i2.PkmDetailState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i4.Stream<_i2.PkmDetailState>.empty(),
          )
          as _i4.Stream<_i2.PkmDetailState>);

  @override
  _i2.PkmDetailState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakePkmDetailState_0(this, Invocation.getter(#state)),
          )
          as _i2.PkmDetailState);

  @override
  set state(_i2.PkmDetailState? value) => super.noSuchMethod(
    Invocation.setter(#state, value),
    returnValueForMissingStub: null,
  );

  @override
  _i2.PkmDetailState get debugState =>
      (super.noSuchMethod(
            Invocation.getter(#debugState),
            returnValue: _FakePkmDetailState_0(
              this,
              Invocation.getter(#debugState),
            ),
          )
          as _i2.PkmDetailState);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.Future<void> getPkmDetails() =>
      (super.noSuchMethod(
            Invocation.method(#getPkmDetails, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> getPkmMoveDetails({required String? url}) =>
      (super.noSuchMethod(
            Invocation.method(#getPkmMoveDetails, [], {#url: url}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  void setPokemonExtraData(_i5.Pokemon? pkmExtraData) => super.noSuchMethod(
    Invocation.method(#setPokemonExtraData, [pkmExtraData]),
    returnValueForMissingStub: null,
  );

  @override
  void resetState() => super.noSuchMethod(
    Invocation.method(#resetState, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetMoveDetails() => super.noSuchMethod(
    Invocation.method(#resetMoveDetails, []),
    returnValueForMissingStub: null,
  );

  @override
  bool updateShouldNotify(
    _i2.PkmDetailState? old,
    _i2.PkmDetailState? current,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateShouldNotify, [old, current]),
            returnValue: false,
          )
          as bool);

  @override
  _i9.RemoveListener addListener(
    _i10.Listener<_i2.PkmDetailState>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #addListener,
              [listener],
              {#fireImmediately: fireImmediately},
            ),
            returnValue: () {},
          )
          as _i9.RemoveListener);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
